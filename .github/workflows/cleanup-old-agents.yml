name: "Cleanup Old Agents"

on:
  workflow_run:
    workflows: ["Server CI"]
    types:
      - completed

permissions:
  contents: read

jobs:
  cleanup:
    # Only run when server deployment was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Check if this was part of the AI Consultant Agent -> Server deployment chain
      - name: Download server deployment completion signal
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: ${{ github.event.workflow_run.workflow_id }}
          run_id: ${{ github.event.workflow_run.id }}
          name: server_deployment_complete
          path: ./signals
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_artifacts: true
          if_no_artifact_found: warn

      - name: Check if server deployment came from AI Consultant agent workflow
        id: check_signal
        run: |
          if [ -f "./signals/server_deployment_complete.txt" ]; then
            echo "signal_found=true" >> $GITHUB_OUTPUT
          else
            echo "signal_found=false" >> $GITHUB_OUTPUT
          fi

      # Only proceed with cleanup if the signal file was found
      - name: Set up Python for cleanup
        if: steps.check_signal.outputs.signal_found == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies for cleanup
        if: steps.check_signal.outputs.signal_found == 'true'
        run: |
          python -m pip install --upgrade pip
          cd agents/ai-consultant-agent
          pip install -r requirements.txt
          pip install google-adk absl-py python-dotenv

      - name: Authenticate with Google Cloud
        if: steps.check_signal.outputs.signal_found == 'true'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud CLI
        if: steps.check_signal.outputs.signal_found == 'true'
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Create automatic confirmation patch for delete_agents.py
        if: steps.check_signal.outputs.signal_found == 'true'
        run: |
          cd agents/ai-consultant-agent/deployment
          # Create a temporary modified version of the script that auto-confirms
          cp delete_agents.py delete_agents_auto.py
          
          # Replace the input prompt with an automatic "yes"
          sed -i 's/confirmation = input.*/confirmation = "y"/' delete_agents_auto.py
          
          # Check if the modification was successful
          if grep -q 'confirmation = "y"' delete_agents_auto.py; then
            echo "✅ Successfully patched delete_agents.py to auto-confirm deletions"
          else
            echo "❌ Failed to patch delete_agents.py"
            exit 1
          fi

      - name: Run auto-confirming delete_agents script
        if: steps.check_signal.outputs.signal_found == 'true'
        env:
          PROJECT_ID: ${{ vars.PROJECT_ID }}
          REGION: us-central1
          GCP_BUCKET: ${{ vars.GCP_BUCKET }}
        run: |
          cd agents/ai-consultant-agent/deployment
          python delete_agents_auto.py --project_id $PROJECT_ID --location us-central1 --bucket $GCP_BUCKET --force

      - name: Report cleanup status
        if: steps.check_signal.outputs.signal_found == 'true'
        run: |
          echo "✅ Old agents cleanup completed successfully"

      - name: Report no cleanup needed
        if: steps.check_signal.outputs.signal_found == 'false'
        run: |
          echo "ℹ️ Skipping cleanup as this was not triggered by the AI Consultant Agent deployment chain"
          
          
          v=spf1 include:spf.efwd.registrar-servers.com ~all