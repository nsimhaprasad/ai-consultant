name: Jetbrains Plugin

on:
  push:
    paths:
      - 'intelij-plugin/**'
    branches: [ main ]
    tags:
      - 'jetbrains-plugin-v*'  # Trigger on tags starting with jetbrains-plugin-v
  pull_request:
    paths:
      - 'intelij-plugin/**'
    branches: [ main ]
  workflow_dispatch:  # Manual trigger (no inputs needed)

# Cancel previous runs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    # Always run build job for all trigger types
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        working-directory: intelij-plugin

      - name: Build plugin
        run: ./gradlew clean buildPlugin
        working-directory: intelij-plugin
        env:
          BAID_CLIENT_ID: ${{ secrets.BAID_CLIENT_ID }}
          BAID_REDIRECT_URI: ${{ secrets.BAID_REDIRECT_URI }}
          BAID_AUTH_ENDPOINT: ${{ secrets.BAID_AUTH_ENDPOINT }}
          BAID_SCOPE: ${{ secrets.BAID_SCOPE }}
          BAID_ACCESS_TYPE: ${{ secrets.BAID_ACCESS_TYPE }}
          BAID_PROMPT: ${{ secrets.BAID_PROMPT }}
          BAID_BACKEND_URL: ${{ secrets.BAID_BACKEND_URL }}
          BAID_API_ENDPOINT: ${{ secrets.BAID_API_ENDPOINT }}
          BAID_BACKEND_TOKEN_KEY: ${{ secrets.BAID_BACKEND_TOKEN_KEY }}
          BAID_TOKEN_EXPIRY_KEY: ${{ secrets.BAID_TOKEN_EXPIRY_KEY }}

      - name: Upload plugin artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-package
          path: intelij-plugin/build/distributions/*.zip
          retention-days: 7

  # COMMENTED OUT: Test job (uncomment if needed in future)
  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Set up JDK 21
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: '21'
  #         distribution: 'temurin'
  #
  #     - name: Grant execute permission for gradlew
  #       run: chmod +x ./gradlew
  #       working-directory: intelij-plugin
  #
  #     - name: Run tests
  #       run: ./gradlew test check
  #       working-directory: intelij-plugin
  #       env:
  #         BAID_CLIENT_ID: ${{ secrets.BAID_CLIENT_ID }}
  #         BAID_REDIRECT_URI: ${{ secrets.BAID_REDIRECT_URI }}
  #         BAID_AUTH_ENDPOINT: ${{ secrets.BAID_AUTH_ENDPOINT }}
  #         BAID_SCOPE: ${{ secrets.BAID_SCOPE }}
  #         BAID_ACCESS_TYPE: ${{ secrets.BAID_ACCESS_TYPE }}
  #         BAID_PROMPT: ${{ secrets.BAID_PROMPT }}
  #         BAID_BACKEND_URL: ${{ secrets.BAID_BACKEND_URL }}
  #         BAID_API_ENDPOINT: ${{ secrets.BAID_API_ENDPOINT }}
  #         BAID_BACKEND_TOKEN_KEY: ${{ secrets.BAID_BACKEND_TOKEN_KEY }}
  #         BAID_TOKEN_EXPIRY_KEY: ${{ secrets.BAID_TOKEN_EXPIRY_KEY }}

  # COMMENTED OUT: Verify job (uncomment if needed in future)
  # verify:
  #   runs-on: ubuntu-latest
  #   needs: build  # Changed from 'test' to 'build'
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Set up JDK 21
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: '21'
  #         distribution: 'temurin'
  #
  #     - name: Grant execute permission for gradlew
  #       run: chmod +x ./gradlew
  #       working-directory: intelij-plugin
  #
  #     - name: Verify plugin compatibility
  #       run: ./gradlew verifyPlugin verifyPluginStructure verifyPluginSignature
  #       working-directory: intelij-plugin
  #       env:
  #         BAID_CLIENT_ID: ${{ secrets.BAID_CLIENT_ID }}
  #         BAID_REDIRECT_URI: ${{ secrets.BAID_REDIRECT_URI }}
  #         BAID_AUTH_ENDPOINT: ${{ secrets.BAID_AUTH_ENDPOINT }}
  #         BAID_SCOPE: ${{ secrets.BAID_SCOPE }}
  #         BAID_ACCESS_TYPE: ${{ secrets.BAID_ACCESS_TYPE }}
  #         BAID_PROMPT: ${{ secrets.BAID_PROMPT }}
  #         BAID_BACKEND_URL: ${{ secrets.BAID_BACKEND_URL }}
  #         BAID_API_ENDPOINT: ${{ secrets.BAID_API_ENDPOINT }}
  #         BAID_BACKEND_TOKEN_KEY: ${{ secrets.BAID_BACKEND_TOKEN_KEY }}
  #         BAID_TOKEN_EXPIRY_KEY: ${{ secrets.BAID_TOKEN_EXPIRY_KEY }}

  publish:
    runs-on: ubuntu-latest
    needs: build
    # Only run on tags starting with jetbrains-plugin- or manual trigger on such tags
    if: startsWith(github.ref, 'refs/tags/jetbrains-plugin-')
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        working-directory: intelij-plugin

      # Download the artifact from build job (same workflow run)
      - name: Download plugin artifact
        uses: actions/download-artifact@v4
        with:
          name: plugin-package
          path: intelij-plugin/build/distributions/

      - name: Publish to JetBrains Marketplace
        run: ./gradlew publishPlugin
        working-directory: intelij-plugin
        env:
          INTELLIJ_PUBLISH_TOKEN: ${{ secrets.INTELLIJ_PUBLISH_TOKEN }}
          BAID_CLIENT_ID: ${{ secrets.BAID_CLIENT_ID }}
          BAID_REDIRECT_URI: ${{ secrets.BAID_REDIRECT_URI }}
          BAID_AUTH_ENDPOINT: ${{ secrets.BAID_AUTH_ENDPOINT }}
          BAID_SCOPE: ${{ secrets.BAID_SCOPE }}
          BAID_ACCESS_TYPE: ${{ secrets.BAID_ACCESS_TYPE }}
          BAID_PROMPT: ${{ secrets.BAID_PROMPT }}
          BAID_BACKEND_URL: ${{ secrets.BAID_BACKEND_URL }}
          BAID_API_ENDPOINT: ${{ secrets.BAID_API_ENDPOINT }}
          BAID_BACKEND_TOKEN_KEY: ${{ secrets.BAID_BACKEND_TOKEN_KEY }}
          BAID_TOKEN_EXPIRY_KEY: ${{ secrets.BAID_TOKEN_EXPIRY_KEY }}

  release:
    runs-on: ubuntu-latest
    needs: publish
    permissions:
      contents: write  # Required for creating releases
    steps:
      - uses: actions/checkout@v4

      - name: Download plugin artifact
        uses: actions/download-artifact@v4
        with:
          name: plugin-package
          path: ./artifacts/

      # Extract version from tag (remove 'jetbrains-plugin-v' prefix)
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/jetbrains-plugin-v}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}  # Use the actual tag that triggered this
          name: Baid Plugin v${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Baid Plugin Release v${{ steps.get_version.outputs.VERSION }}
            
            ### What's New
            - Fixed deprecated API usage warnings
            - Updated to latest IntelliJ Platform compatibility (2025.1+)
            - Improved URL handling with modern URI approach
            - Enhanced plugin stability and performance
            - Plugin now requires IDE restart on update for better stability
            
            ### Installation
            Install directly from JetBrains Marketplace or download the plugin ZIP file.
          files: ./artifacts/*.zip
          draft: false
          prerelease: false