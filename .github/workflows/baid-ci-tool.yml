name: BAID-CI Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build-package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel
        pip install -r baid-ci/requirements-dev.txt
    - name: Create packages
      working-directory: baid-ci
      run: |
        python -m build
    - name: Upload Python packages
      uses: actions/upload-artifact@v4
      with:
        name: python-packages
        path: baid-ci/dist/
        retention-days: 5

  build-linux-x86_64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r baid-ci/requirements.txt
        pip install nuitka ordered-set pytest-runner patchelf
    - name: Build executable
      working-directory: baid-ci
      run: |
        python scripts/build_executables.py linux-x86_64
    - name: Upload Linux executable
      uses: actions/upload-artifact@v4
      with:
        name: linux-x86_64-executable
        path: baid-ci/build/baid-ci-linux-x86_64
        retention-days: 5

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r baid-ci/requirements.txt
        pip install nuitka ordered-set pytest-runner
        # Install ccache manually to avoid download issues
        brew install ccache
    - name: Modify build script for macOS
      run: |
        # Create a temporary modified version of the build script
        cat > baid-ci/scripts/macos_build.py << 'EOL'
#!/usr/bin/env python3
"""
Modified build script for macOS to disable ccache and fix Nuitka issues
"""

import os
import sys
import subprocess
from pathlib import Path

def build_macos_executable():
    """Build macOS executable with custom options"""
    print("Building macOS executable...")
    
    # Create build directory if it doesn't exist
    build_dir = Path("build")
    build_dir.mkdir(exist_ok=True)
    
    # Base command with ccache disabled
    cmd = [
        sys.executable, "-m", "nuitka",
        "--standalone",
        "--onefile",
        "--follow-imports",
        "--include-package=baid_ci",
        "--disable-ccache",  # Disable ccache to avoid Nuitka download issues
        "--remove-output",
        "--plugin-enable=anti-bloat",
        "--prefer-source-code",
        "--no-pyi-file",
        "main.py",
        "--output-filename=baid-ci-macos-x86_64"
    ]

    # Run the command
    print(f"Running: {' '.join(cmd)}")
    result = subprocess.run(cmd, check=False)
    
    if result.returncode == 0:
        print("✓ Successfully built macOS executable")
        
        # Move the executable to the build directory
        output_path = Path("baid-ci-macos-x86_64")
        if output_path.exists():
            dest_path = build_dir / "baid-ci-macos-x86_64"
            os.rename(output_path, dest_path)
            print(f"✓ Moved executable to {dest_path}")
            # Make executable
            os.chmod(dest_path, 0o755)
            return True
        else:
            print(f"Warning: Expected output file not found")
            return False
    else:
        print(f"✗ Failed to build executable for macOS")
        return False

if __name__ == "__main__":
    sys.exit(0 if build_macos_executable() else 1)
EOL
        chmod +x baid-ci/scripts/macos_build.py
    - name: Build executable
      working-directory: baid-ci
      run: |
        python scripts/macos_build.py
    - name: Upload macOS executable
      uses: actions/upload-artifact@v4
      with:
        name: macos-x86_64-executable
        path: baid-ci/build/baid-ci-macos-x86_64
        retention-days: 5

  pypi-publish:
    needs: build-package
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download Python packages
      uses: actions/download-artifact@v4
      with:
        name: python-packages
        path: dist/
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true
        verbose: true

  create-release:
    needs: [build-linux-x86_64, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v4
    - name: Download Linux executable
      uses: actions/download-artifact@v4
      with:
        name: linux-x86_64-executable
        path: dist/
    - name: Download macOS executable
      uses: actions/download-artifact@v4
      with:
        name: macos-x86_64-executable
        path: dist/
    - name: Create release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: |
          dist/baid-ci-linux-x86_64
          dist/baid-ci-macos-x86_64